#cli weather
function weather() {
    curl -s http://wttr.in/$1; 
}

#jump up and down into a folder
cu() {
    cd "../$@"
}
#Make a timestamped copy of a file
ct() {     
    ts=`date +"%d%m%Y"`;     
    cp "$@" "$@.$ts"; 
}

# make a folder and jump into it
mc() { 
    dir = "$1"
    if [ -d "$dir" -a ! -h "$dir" ]
    then
        echo "$dir already exists"
        exit 1
    else
        mkdir -p "$1"
        cd "$1" || exit
    fi
}

#force dns lookup against AD
nsla() {
    nslookup $@ 152.71.2.3
}

# get expiry date from server
ced() {
test=$(nslookup $@)
if [ $? -eq 0 ]; then
    openssl s_client -servername $@ -connect $@:443 2>&1 < /dev/null | openssl x509 -noout -dates
    #|| exit
    return 1
else
    echo 'host not found'
    return 0
fi
}

# get SANs from remote server
gsan() {
openssl s_client -connect $@:443 </dev/null 2>/dev/null | openssl x509 -noout -text | grep DNS:
}

#connect airpods and make default output/input
function caps {
    #BluetoothConnector -c 50-57-8a-c8-f5-6c --notify
    /usr/local/bin/SwitchAudioSource -s "Stuart’s AirPods Pro" -t input
    /usr/local/bin/SwitchAudioSource -s "Stuart’s AirPods Pro"
    /usr/local/bin/SwitchAudioSource -s "Stuart’s AirPods Pro" -t system
}

function dcaps {
    BluetoothConnector -d e8-ab-fa-4d-2a-62 --notify
}

function bmic {
    /usr/local/bin/SwitchAudioSource -s "Wave Link Stream" -t input
}

function daps {
    BluetoothConnector -d e8-ab-fa-4d-2a-62 --notify
}

#find file
function ft {
    find . -name $1 -print
}

#tail ls folder
function lt {
    TD="${1:-./}"
    ls -lrt $TD | tail
}

#ns lookup to clipboard
function dnc {
    set -o pipefail
    HIP=$(/usr/bin/host $@ | grep -v IPv6 | grep -i '[0-9].[0-9]' | awk 'NR==1{print $4}')
if [ $? == 1 ]
then
    echo "$@ not found this"
else
    echo "$@ = $HIP"
    echo $HIP | pbcopy
fi
}

# fcb, copy file contents to clipboard
function fcb {
pbcopy < $1
}

# lastpass linux root password lookups
# Set lastpass session length to 10 hours
export LPASS_AGENT_TIMEOUT=0
function lrp {
lpass show --notes 'Linux root passwords' | grep $1 | awk 'BEGIN {RS=""}{gsub(/\/n/,""); print $2}' | head -1 | pbcopy
}

#curl functions
#Curl headers over SSL
function chs {
   HOLD=$(echo $1 | sed 's/https:\/\///g') 
    curl -vk -o /dev/null https://$HOLD
}

#curl headers on 80
function ch {
    curl -vk -o /dev/null http://$1
}
